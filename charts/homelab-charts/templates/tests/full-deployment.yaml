deployment:
  create: true
  replicaCount: 2
  image:
    repository: nginx
    tag: "1.19.10"
    pullPolicy: IfNotPresent
  imagePullSecrets: []
  secrets:
    - name: my-secret-1
    - name: my-secret-2
  env:
    ENV_VAR_1: value1
    ENV_VAR_2: value2
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
  podLabels:
    app: nginx
    release: stable
  podSecurityContext:
    runAsUser: 1000
  serviceAccountName: default
  securityContext:
    runAsUser: 1000
  livenessProbe:
    httpGet:
      path: /
      port: 80
    initialDelaySeconds: 15
    periodSeconds: 30
  readinessProbe:
    httpGet:
      path: /
      port: 80
    initialDelaySeconds: 20
    periodSeconds: 30
  resources:
    requests:
      memory: "64Mi"
      cpu: "250m"
    limits:
      memory: "128Mi"
      cpu: "500m"
  volumeMounts:
    - name: data
      mountPath: /data
  volumes:
    - name: data
      emptyDir: {}
  nodeSelector:
    kubernetes.io/os: linux
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                  - linux
  tolerations:
    - key: "node.kubernetes.io/not-ready"
      operator: "Exists"
      effect: "NoExecute"
      tolerationSeconds: 300
service:
  name: http
  port: 80
  protocol: TCP
